<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SSS.Api</name>
    </assembly>
    <members>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注入HttpContext
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseRedisCache(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            注入RedisCache
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseMemCached(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            注入Memcached
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Service Base
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddAutoMapperSupport(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AutoMapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger
            </summary>
            <param name="services"></param> 
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            默认Redis链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemCached(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            默认Memcached链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AutoRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <summary>
            自动注册服务
            </summary>
            <param name="services">注册服务的集合（向其中注册）</param>
            <param name="ImplementationType">要注册的类型</param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AutoRegisterServicesFromAssembly(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            将程序集中的所有符合条件的类型全部注册到 IServiceCollection 中
            </summary>
            <param name="services">IServiceCollection</param>
            <param name="AassemblyName">程序集名字</param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Domain(System.String)">
            <summary>
            1
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Infrastructure(System.String)">
            <summary>
            2
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_CQRS(System.String)">
            <summary>
            3
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Application(System.String)">
            <summary>
            4
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Api(System.String)">
            <summary>
            5
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:SSS.Api.Controllers.StudentController">
            <summary>
            StudentController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.#ctor(SSS.Application.Student.IStudentService)">
            <summary>
            StudentController
            </summary>
            <param name="student">IStudentService</param>
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.GetByName(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            GetByName
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.GetList(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            GetList
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.UpdateAge(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            UpdateAge
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.AddStudent(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            AddStudent
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.TradeController">
            <summary>
            TradeController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.TradeController.GetList(SSS.Domain.Trade.Dto.TradeInputDto)">
            <summary>
            GetList
            </summary>
            <param name="trade">TradeInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.TradeController.AddTrade(SSS.Domain.Trade.Dto.TradeInputDto)">
            <summary>
            AddTrade
            </summary>
            <param name="trade">TradeInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.UserInfoController">
            <summary>
            UserInfoController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.UserInfoController.#ctor(SSS.Application.UserInfo.Service.IUserInfoService)">
            <summary>
            UserInfoController
            </summary>
            <param name="UserInfo">IUserInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.UserInfoController.AddUserInfo(SSS.Domain.UserInfo.Dto.UserInfoInputDto)">
            <summary>
            AddUserInfo
            </summary>
            <param name="input">UserInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.UserInfoController.ListUser(SSS.Domain.UserInfo.Dto.UserInfoInputDto)">
            <summary>
            ListUserInfo
            </summary>
            <param name="input">UserInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.UserInfoController.GetByPhone(SSS.Domain.UserInfo.Dto.UserInfoInputDto)">
            <summary>
            getbyphone
            </summary>
            <param name="input">UserInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration">IConfiguration</param>
        </member>
        <member name="P:SSS.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:SSS.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure
            </summary>
            <param name="app">IApplicationBuilder</param>
            <param name="env">IHostingEnvironment</param>
        </member>
    </members>
</doc>
