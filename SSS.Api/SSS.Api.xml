<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SSS.Api</name>
    </assembly>
    <members>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注入HttpContext
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseRedisCache(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            注入RedisCache
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseMemCached(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            注入Memcached
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Service Base
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddAutoMapperSupport(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AutoMapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger
            </summary>
            <param name="services"></param> 
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            默认Redis链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemCached(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            默认Memcached链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMongoDB(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            配置MongoDB链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMongoDB(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.DataBase.MongoDB.MongoOptions})">
            <summary>
            配置MongoDB链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMongoDB(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            默认MongoDB链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:SSS.Api.Controllers.StudentController">
            <summary>
            StudentController
            使用IdentityServer授权，放开IdentityMiddleware中间件注释，并放开Authorize注解
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.#ctor(SSS.Application.Student.IStudentService,SSS.Infrastructure.Seedwork.Cache.Redis.RedisCache,SSS.Infrastructure.Seedwork.Cache.Memcached.MemCached)">
            <summary>
            StudentController
            </summary>
            <param name="student">IStudentService</param>
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.GetByName(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            GetByName
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.GetList(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            GetList
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.StudentController.UpdateAge(SSS.Domain.Student.Dto.StudentInputDto)">
            <summary>
            UpdateAge
            </summary>
            <param name="student">StudentInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup
            </summary>
            <param name="configuration">IConfiguration</param>
        </member>
        <member name="P:SSS.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:SSS.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure
            </summary>
            <param name="app">IApplicationBuilder</param>
            <param name="env">IHostingEnvironment</param>
        </member>
    </members>
</doc>
